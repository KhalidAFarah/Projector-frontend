{"version":3,"sources":["components/Header.tsx","components/Selection.tsx","components/Selector.tsx","components/Card.tsx","components/Cards.tsx","pages/Homepage.tsx","components/Button.tsx","pages/DestinyOAUTH.tsx","components/TextHeader.tsx","components/Text.tsx","components/Video.tsx","components/BtnReturn.tsx","pages/RestAPIScript.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Heaeder","props","className","txt","Selection","onClick","func","Selector","txtbtn1","func1","txtbtn2","func2","link","Card","style","paddingLeft","paddingRight","window","location","href","transitionDuration","src","img","alt","title","Cards","classes","styles","id","viewBox","width","xmlns","version","x","y","height","fill","d","cards","map","card","index","clickfunc","setPressed","Homepage","useState","setLink","useEffect","a","fetch","method","headers","then","response","console","log","ok","json","data","catch","error","explanations","pressed","transition","opacity","overflow","Header","transform","Button","DestinyOAUTH","TextHeader","undefined","tabIndex","marginTop","Text","marginBottom","Video","frameBorder","allow","allowFullScreen","BtnReturn","origin","RestAPIScript","color","textAlign","fontSize","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fb48134.chunk.js","sourcesContent":["const Heaeder = (props:any) => {\r\n    return (\r\n        <div className=\"Header\">    \r\n            <h1>{props.txt}</h1>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Heaeder\r\n","const Selection = (props:any) => {\r\n    return (\r\n        <div className=\"selection col-3\">\r\n            <button onClick={props.func} className=\"text-start-center\">{props.txt}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Selection\r\n","import Selection from './Selection';\r\nconst Selector = (props:any) => {\r\n    return (\r\n        <div className=\"row\">\r\n        <div className=\"selector row justify-content-center\">\r\n            <Selection txt={props.txtbtn1} func={props.func1}/>\r\n            <Selection txt={props.txtbtn2} func={props.func2}/>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n            <span className={props.link == 3 ? \"underscore col-3 offset-3\" : \"underscore col-3 offset-6\" }></span>\r\n        </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Selector\r\n","import React from 'react'\r\nimport { Row } from 'react-bootstrap';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst Card = (props:any) => {\r\n    \r\n   \r\n//style={ pressed == false ? {paddingLeft: 3+\"rem\", paddingRight: 3+\"rem\"} : {paddingLeft: 3+\"rem\", paddingRight: 3+\"rem\", transform: \"scale(\"+100+\")\", transitionDuration: 1000+\"ms\", zIndex: 100} }\r\n    return (\r\n\r\n\r\n        <div className=\"Card col\" style={{paddingLeft: 3+\"rem\", paddingRight: 3+\"rem\"}}  onClick={\r\n            () =>{\r\n                //props.setPressed(true)\r\n                \r\n                window.location.href = props.link; \r\n                //props.clickfunc()\r\n            }\r\n        }>\r\n             <div className=\"card h-100 border-dark\" style={{transitionDuration: 0.2+\"s\"}}>\r\n             \r\n                <div>\r\n                    <img src={\"/images/\"+props.img} alt=\"sup\" className=\"card-img-top\"/>\r\n                    <div className=\"card-body Card-body\" >\r\n                        <h4 className=\"card-title text-start\">{props.title}</h4>\r\n                        <p className=\"card-text text-start fs-5 p-2\">{props.txt}</p>\r\n                    </div>\r\n                    </div>\r\n                 \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import Card from './Card';\r\nimport '../index.css';\r\n\r\nconst Cards = (props:any) => {\r\n    let divstyle;\r\n    const classes = \"background-cards \" + props.styles;\r\n\r\n    return (\r\n        <div  className={classes} style={props.style}>\r\n            <svg id=\"visual\" viewBox=\"0 0 900 150\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"  version=\"1.1\">\r\n                <rect x=\"0\" y=\"0\" width=\"900\" height=\"100\" fill=\"#eb7f20\"></rect>\r\n                <path d=\"M0 60L10 62.5C20 65 40 70 60 63.3C80 56.7 100 38.3 120 49.5C140 60.7 160 101.3 180 113C200 124.7 220 107.3 240 89.5C260 71.7 280 53.3 300 60.7C320 68 340 101 360 110.3C380 119.7 400 105.3 420 94.2C440 83 460 75 480 84.7C500 94.3 520 121.7 540 119.8C560 118 580 87 600 76.3C620 65.7 640 75.3 660 84.7C680 94 700 103 720 102.7C740 102.3 760 92.7 780 76.2C800 59.7 820 36.3 840 38.3C860 40.3 880 67.7 890 81.3L900 95L900 0L890 0C880 0 860 0 840 0C820 0 800 0 780 0C760 0 740 0 720 0C700 0 680 0 660 0C640 0 620 0 600 0C580 0 560 0 540 0C520 0 500 0 480 0C460 0 440 0 420 0C400 0 380 0 360 0C340 0 320 0 300 0C280 0 260 0 240 0C220 0 200 0 180 0C160 0 140 0 120 0C100 0 80 0 60 0C40 0 20 0 10 0L0 0Z\" fill=\"#333333\" stroke-linecap=\"round\" stroke-linejoin=\"miter\"/>\r\n            </svg>\r\n            <div className=\"container\">\r\n                <div className=\"Cards row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\">\r\n                    {props.cards.map((card:any, index:number) => (\r\n                        <Card key={index} img={card.img} title={card.title} txt={card.txt} clickfunc={card.clickfunc} setPressed={props.setPressed} link={card.link}/>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n\r\n","import React, { SyntheticEvent } from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Header from '../components/Header';\r\nimport Selector from '../components/Selector';\r\nimport Cards from '../components/Cards';\r\n\r\nimport DestinyOAUTH from '../pages/DestinyOAUTH';\r\nimport RestAPIScript from '../pages/RestAPIScript';\r\n\r\n\r\nconst Homepage = () => {\r\n\r\n  const [link, setLink] = useState(3);\r\n  const [active ,setActive] = useState(false);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await fetch(\"http://localhost:8000/sup\", {\r\n        method: 'GET',\r\n        headers: {'Content-Type':'application/json'}\r\n      }).then(response => {\r\n        console.log(\"sd\")\r\n        if(response.ok){\r\n          \r\n          return response.json();\r\n        }\r\n        throw response\r\n        \r\n      }).then(data => {\r\n        console.log(data);\r\n      }).catch( error => {\r\n        console.log(\"Unable to fecth from backend\");\r\n      })\r\n      \r\n    })()\r\n  }, []);\r\n  ;\r\n\r\n//First selector\r\nconst showPrograms = () =>{\r\n  console.log(\"Hello showing programs\");\r\n  setLink(3);\r\n}\r\n\r\n//Second selector\r\nconst showExplanations = () =>{\r\n  \r\n  setLink(6);\r\n  /*const proj = document.querySelector(\".proj\");\r\n  const exp = document.querySelector(\".exp\");\r\n  \r\n  \r\n  if(proj != null){\r\n    proj.classList.add(\"slide\")\r\n  }\r\n  if(exp != null){\r\n    exp.classList.add(\"slide\")\r\n  }*/\r\n}\r\n\r\n\r\n\r\nconst showCardInfo = () => {\r\n  console.log(\"you pressed a card, wow!\");\r\n}\r\n\r\n\r\n//buttons on click\r\nconst firstbtnonclick = () => {\r\n  //setField(<DestinyOAUTH/>);\r\n}\r\nconst RestAPIScript = () => {\r\n  //setField(<RestAPIScript/>);\r\n\r\n}\r\nconst cards = [{\r\n  img: \"testimage.PNG\",\r\n  title: \"LOREM IPSUM\",\r\n  txt: \"This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\",\r\n  clickfunc: firstbtnonclick,\r\n  link: \"/destinyoauth\"\r\n}]\r\nconst explanations = [{\r\n  img: \"testimage.PNG\",\r\n  title: \"Rest API\",\r\n  txt: \"The following is about Rest API with destiny 2 as an example.\",\r\n  clickfunc: RestAPIScript,\r\n  link: \"restapiscript\"\r\n}]\r\n\r\nconst [pressed, setPressed] = useState(false);\r\n\r\n\r\nreturn (\r\n    <div className=\"App\">\r\n        <div style={ pressed ? {transition: 100+\"ms\", opacity: 0,overflow:\"\"} : {}}>\r\n            <Header txt=\"Projector.io\"/>\r\n            <Selector txtbtn1=\"Show programs\" txtbtn2=\"Show explanations\" func1={showPrograms} func2={showExplanations} link={link}/>\r\n            <div style={{overflow:\"hidden\"}}>\r\n              \r\n                <Cards link={link} styles=\"proj\" style={link == 3 ? {transform: \"translateX(0%)\"} : {transform: \"translateX(-100%)\"}} setPressed={setPressed} cards={cards} />\r\n                <Cards link={link} styles=\"exp\" style={link == 3 ? {transform: \"translateX(100%)\"} : {transform: \"translateX(0%)\"}} setPressed={setPressed} cards={explanations} />\r\n              \r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Homepage\r\n","import React from 'react'\r\n\r\nconst Button = (props:any) => {\r\n    return (\r\n        <div>\r\n            <button className=\"btn btn-primary\" onClick={props.onClick}>{props.txt}</button>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import Btn from \"../components/Button\"\r\nconst DestinyOAUTH = (props:any) => {\r\n    const authorizeOnClick = () => {\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">    \r\n            <Btn txt=\"Authorize\" onClick={authorizeOnClick}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DestinyOAUTH\r\n","\r\nconst TextHeader = (props:any) => {\r\n    let classes = \"h1 \";\r\n    if(props.classes != undefined){\r\n         classes += props.classes;\r\n    }\r\n    return (\r\n        <p tabIndex={0} className={classes} style={{marginTop:\"5rem\"}}>{props.txt}</p>\r\n    )\r\n}\r\n\r\nexport default TextHeader\r\n","\r\nconst Text = (props:any) => {\r\n    let classes = \"p\"\r\n    if(props.classes != undefined){\r\n        classes += props.classes;\r\n    }\r\n    \r\n    return (\r\n        <p tabIndex={0} className={classes} style={{marginTop: \"2rem\", marginBottom:\"2rem\"}}>{props.txt}</p>\r\n    )\r\n}\r\n\r\nexport default Text\r\n","import React from 'react'\r\n\r\nconst Video = (props:any) => {\r\n    let classes = \"video\";\r\n    if(props.classes != undefined){\r\n        classes += props.classes;\r\n    }\r\n    return (\r\n        <div className={classes} >\r\n            <p><iframe   width=\"560\" height=\"315\" src={props.src} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen>\r\n            </iframe></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Video\r\n","const BtnReturn = () => {\r\n    const txt = \"<\";\r\n    return (\r\n        <div className='btn-return'>\r\n            <button onClick={() => {\r\n                console.log(window.location)\r\n                window.location.href = window.location.origin;\r\n            }}>{txt}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BtnReturn\r\n","import TextHeader from \"../components/TextHeader\"\r\nimport Text from \"../components/Text\"\r\nimport Video from \"../components/Video\"\r\nimport BtnReturn from \"../components/BtnReturn\"\r\n\r\nconst RestAPIScript = (props:any) => {\r\n    return (\r\n        <>\r\n        <BtnReturn />\r\n        <div className=\"App container\" style={{color:\"white\", textAlign:\"start\", fontSize: \"2rem\"}}>\r\n            \r\n            <Video src=\"https://www.youtube.com/embed/UQzsl7bUg5U\" classes=\"\"/>\r\n            <TextHeader txt=\"Intro:\" classes=\"txt-color\"/>\r\n            <Text txt=\"How does Destiny load in your items or those random people in your facinity standing there AFK. How does blitz.gg even when shut off keep track of my headshot percentage in Valorant like i gotta keep to yourself. So how do they do it? Well with a little something called REST API\"/>\r\n            <TextHeader txt=\"Explanation:\" classes=\"txt-color\"/>\r\n            <Text txt=\"What is REST API, well REST API is an API resting on a server, which an external program can communicate with, through links. These links can vary with not only its content, but also its request methods such as “GET”, “POST”, “PUT”, “DELETE”. Just by searching on the internet you by default use the “GET” request method. These methods all do the same, however they all play apart when handling the backend for API servers such as bungies, which we will go into detail later.\r\n                So how do we use API, well API can vary from the service that you use but for this video we will us bungies api, and the best way to start is with “http://destinydevs.github.io/BungieNetPlatform/docs/Getting-Started“. This website gives a basic tutorial how to get started with different programming languages. And “https://bungie-net.github.io/multi/index.html” is another site which has a list of many of bungie endpoint which are the links we will be using. The page also shows us what request method to use as bungies API will interpret same endpoints with different request methods differently and so return different info mostly relevant to the request method for example the “POST” request would post something to the server like you equipping a different armor piece or weapon.\r\n                (skit of hitting up bungie and separating into what the request is method, the root API (https://www.bungie.net/Platform) and the endpoint. Along the lines of “Bungie give me my Le Monarche”, give  would then signify the request method “GET”  and “Bungie” the root api, and “my Le monarque” would be the endpoint)\" />\r\n\r\n            <Text txt=\"This part is more specifically directed at Destiny’s API, where we will speak about how bungie send you the responses.\r\n                To start off bungie knows what they’re making. They’re making a multiplayer game and so good internet connectivity is important, and when so many things such as other items needed to be loaded in and out. And so, the less packets they have to send over the network the better the average connectivity will be. they do this through they’re manifest file and components.\r\n                Components first of all are numbers that you send as queries in then endpoint this means that if the game need a lot of data about a certain item it can attain it but it can also acquire the minimal data for the object meaning less packages sent the player. We can these requests happen when you *cough *cough have bad internet and people are still loading.\"/>\r\n\r\n            <Text txt=\"This part is more so due to performance, for the fact that the if all static data about an item would be fetched from bungie’s server not only would take a long time for all those request to go through and not to mention the packets. Therefore, for optimization all items, stats, perks and etc. in Destiny that have static data that does not change unless bungies themselves changes it. Are stored in an sqlite database file that the game uses and other websites such as DIM. This file stores data in json format and has several tables such as “DestinyInventoryItemDefinition” or “DestinyStatDefinition” and so on. this is further explained by Allynh who explain the huge pro of something like this. \r\n                (Show ER-diagram (this diagram does not represent how bungie database looks like, and probably better than what I drew here.))\" />\r\n\r\n            <TextHeader txt=\"Code part:\" classes=\"txt-color\"/>\r\n            <Text txt=\"So… enough talking how do we use such extravagant technology, for this example we will be using bungies API but most differ partly. How do we actually use it, well to get started we need to get an API key to communicate with bungie servers. This phenomenon is mostly due to the fact that bungie don’t want people to burn their servers by doing to many request at any moment in time. To get the API we will have to head over to bungies developer portal, from there we can create an app and call what we want. We then gather the API key and set the origin header as * as it sometimes can cause problems.\r\n                Now its time to do the coding, where in this example am doing it with python flask backend and then native HTML/CSS/JS as the frontend. From there I use these endpoints to get information about my bungie account all the way till my character and their weapons and items along with their stats and perks we can then route this the front end and can from their look the following.\" />\r\n\r\n            <TextHeader txt=\"Outro:\" classes=\"txt-color\"/>\r\n            <Text txt=\"In this case of course we’re not using OAuth2 of course which means that we don’t have permission for certain transaction such as moving weapons in player inventories, which thank cyber security for that wouldn’t want a random guy grieving me mid game.\r\n                And last but not least, if you enjoyed this the like the video if you believe that the video was terrible dislike, if you want to see more videos like this one hit the subscribe button, and the bell next to. Feedback at the moment for this video is very important as it may determine where I will continue. And here’s the video that i said, i was going to make.\" />\r\n\r\n            <TextHeader txt=\"Sources:\" classes=\"txt-color\"/>\r\n            <Text txt=\"https://bungie-net.github.io/multi/index.html (list of endpoints)\" />\r\n            <Text txt=\"https://bungie-net.github.io/multi/schema_Destiny-DestinyComponentType.html (the diferent component numbers)\" />\r\n            <Text txt=\"http://allynh.com/blog/creating-a-python-app-for-destiny-part-5-reading-a-characters-inventory-and-vault-contents/ (i later figured out that this site does not have a certificate and does not encrypt transmission so browse at your own risk!)\" />\r\n            <Text txt=\"http://destinydevs.github.io/BungieNetPlatform/docs/Getting-Started (same goes for  here)\" />\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RestAPIScript\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport './App.css';\r\n\r\n//pages\r\nimport Homepage from './pages/Homepage';\r\nimport DestinyOAUTH from './pages/DestinyOAUTH';\r\nimport RestAPIScript from './pages/RestAPIScript';\r\n\r\nfunction App() {\r\n\r\n  \r\n  return (\r\n    <Router>\r\n      <Route path=\"/\" exact component={Homepage}/>\r\n      <Route path=\"/destinyoauth\" component={DestinyOAUTH} />\r\n      <Route path=\"/restapiscript\" component={RestAPIScript} />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}